basePath: /
definitions:
  handlers.ProjectDetailView:
    properties:
      category:
        $ref: '#/definitions/models.Category'
        type: object
      description:
        type: string
      event_date:
        type: string
      goal_amount:
        type: integer
      goal_people:
        type: integer
      id:
        type: integer
      image_link:
        type: string
      instructions:
        type: string
      owner:
        $ref: '#/definitions/models.User'
        type: object
      percent:
        type: integer
      project_type:
        $ref: '#/definitions/models.ProjectType'
        type: object
      release_date:
        type: string
      status:
        type: string
      subtitle:
        type: string
      title:
        type: string
      total:
        type: integer
    type: object
  handlers.ProjectDonation:
    properties:
      id:
        type: integer
      locked:
        type: boolean
      paid:
        type: boolean
      user:
        $ref: '#/definitions/models.User'
        type: object
    type: object
  handlers.TokenRequest:
    properties:
      code:
        type: string
    type: object
  handlers.TokenResponse:
    properties:
      token:
        type: string
    type: object
  handlers.extendedUser:
    properties:
      avatar:
        type: string
      first_name:
        type: string
      id:
        type: integer
      is_staff:
        type: boolean
      last_name:
        type: string
      participation:
        items:
          $ref: '#/definitions/handlers.participation'
        type: array
      project_count:
        type: integer
      success_rate:
        type: number
      username:
        type: string
    type: object
  handlers.participation:
    properties:
      count:
        type: integer
      id:
        type: integer
    type: object
  models.Category:
    properties:
      alias:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  models.Donation:
    properties:
      id:
        type: integer
      locked:
        type: boolean
      paid:
        type: boolean
      payment:
        type: integer
    type: object
  models.ProjectType:
    properties:
      alias:
        type: string
      end_by_goal_gain:
        type: boolean
      goal_by_amount:
        type: boolean
      goal_by_people:
        type: boolean
      id:
        type: integer
      name:
        type: string
      options:
        items:
          type: string
        type: array
    type: object
  models.User:
    properties:
      avatar:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      project_count:
        type: integer
      success_rate:
        type: number
      username:
        type: string
    type: object
info:
  contact: {}
  description: This is a launchpad backend.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Launchpad API
  version: "1.0"
paths:
  /category:
    get:
      description: Returns list of categories
      operationId: get-categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
      security:
      - Bearer: []
      summary: Returns list of categories
      tags:
      - category
  /donation:
    get:
      description: Returns list of user's donations
      operationId: get-user-donations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Donation'
      security:
      - Bearer: []
      summary: Returns list of user's donations
      tags:
      - donation
  /donation/project:
    get:
      description: Returns list of project donations
      operationId: get-project-donations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ProjectDonation'
      security:
      - Bearer: []
      summary: Returns list of project donations
      tags:
      - donation
  /login:
    post:
      consumes:
      - application/json
      description: get token for user
      operationId: get-token
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.TokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.TokenResponse'
      summary: Returns access token
      tags:
      - auth
  /project/{id}:
    get:
      description: Returns project by ID
      operationId: get-project-by-id
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ProjectDetailView'
      security:
      - Bearer: []
      summary: Show a single project
      tags:
      - project
  /project_type:
    get:
      description: Returns list of project types
      operationId: get-project-types
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProjectType'
      security:
      - Bearer: []
      summary: return list of project types
      tags:
      - project type
  /user:
    get:
      description: Returns user by ID from token
      operationId: get-user-by-token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.extendedUser'
      security:
      - Bearer: []
      summary: Show a current user
      tags:
      - user
  /user/{id}:
    get:
      description: Returns user by ID
      operationId: get-user-by-id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.extendedUser'
      security:
      - Bearer: []
      summary: Show a specific user
      tags:
      - user
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
