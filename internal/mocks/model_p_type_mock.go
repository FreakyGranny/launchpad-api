// Code generated by MockGen. DO NOT EDIT.
// Source: project_type.go

// Package mocks is a generated GoMock package.
package mocks

import (
	models "github.com/FreakyGranny/launchpad-api/internal/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockProjectTypeImpl is a mock of ProjectTypeImpl interface
type MockProjectTypeImpl struct {
	ctrl     *gomock.Controller
	recorder *MockProjectTypeImplMockRecorder
}

// MockProjectTypeImplMockRecorder is the mock recorder for MockProjectTypeImpl
type MockProjectTypeImplMockRecorder struct {
	mock *MockProjectTypeImpl
}

// NewMockProjectTypeImpl creates a new mock instance
func NewMockProjectTypeImpl(ctrl *gomock.Controller) *MockProjectTypeImpl {
	mock := &MockProjectTypeImpl{ctrl: ctrl}
	mock.recorder = &MockProjectTypeImplMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProjectTypeImpl) EXPECT() *MockProjectTypeImplMockRecorder {
	return m.recorder
}

// GetAll mocks base method
func (m *MockProjectTypeImpl) GetAll() ([]models.ProjectType, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]models.ProjectType)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll
func (mr *MockProjectTypeImplMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockProjectTypeImpl)(nil).GetAll))
}
