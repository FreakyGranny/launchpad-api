// Code generated by MockGen. DO NOT EDIT.
// Source: vk.go

// Package auth is a generated GoMock package.
package auth

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockHTTPTransport is a mock of HTTPTransport interface
type MockHTTPTransport struct {
	ctrl     *gomock.Controller
	recorder *MockHTTPTransportMockRecorder
}

// MockHTTPTransportMockRecorder is the mock recorder for MockHTTPTransport
type MockHTTPTransportMockRecorder struct {
	mock *MockHTTPTransport
}

// NewMockHTTPTransport creates a new mock instance
func NewMockHTTPTransport(ctrl *gomock.Controller) *MockHTTPTransport {
	mock := &MockHTTPTransport{ctrl: ctrl}
	mock.recorder = &MockHTTPTransportMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHTTPTransport) EXPECT() *MockHTTPTransportMockRecorder {
	return m.recorder
}

// Do mocks base method
func (m *MockHTTPTransport) Do(req *http.Request) (*http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Do", req)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Do indicates an expected call of Do
func (mr *MockHTTPTransportMockRecorder) Do(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Do", reflect.TypeOf((*MockHTTPTransport)(nil).Do), req)
}
